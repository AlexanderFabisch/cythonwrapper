from distutils.core import setup
from distutils.extension import Extension
from distutils.sysconfig import get_config_vars
from Cython.Build import cythonize
import numpy
import os


def strict_prototypes_workaround():
    # Workaround to remove '-Wstrict-prototypes' from compiler invocation
    (opt,) = get_config_vars('OPT')
    os.environ['OPT'] = " ".join(
        flag for flag in opt.split() if flag != '-Wstrict-prototypes'
    )


if __name__ == '__main__':
    strict_prototypes_workaround()

    extensions = [
        Extension(
            "{{ module }}",
            [
                "{{ module }}.pyx",
{%- for filename in filenames %}
                "{{ filename }}",
{%- endfor %}
            ],
            include_dirs = [
                "{{ sourcedir }}",
                numpy.get_include(),
{%- for incdir in incdirs %}
                "{{ incdir }}",
{%- endfor %}
            ],
            define_macros = [("NDEBUG",)],
            extra_compile_args = ["-O3", "-std=c++11"],
            language = "c++"
        )
    ]
    setup(ext_modules=cythonize(extensions))