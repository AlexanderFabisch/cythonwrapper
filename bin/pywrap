#!/usr/bin/env python
import os
import argparse
import pywrap
from pywrap.cython import make_cython_wrapper, write_files, cython


def parse_args():
    argparser = argparse.ArgumentParser(description=pywrap.__description__)
    argparser.add_argument("header", nargs="*", type=str,
                           help="C++ header file")
    argparser.add_argument("--sources", nargs="*", type=str, default=[],
                           help="C++ implementation files")
    argparser.add_argument(
        "--modulename", type=str, nargs="?", default=None,
        help="Name of the extension module that will be generated")
    argparser.add_argument("--outdir", type=str, nargs="?", default=".",
                           help="output directory")
    argparser.add_argument("--config", type=str, nargs="?", default=None,
                           help="Configuration (Python file)")
    argparser.add_argument(
        "--incdirs", type=str, nargs="*", default=[],
        help="Include directories (will be translated to -I flag for compiler)")
    argparser.add_argument("--verbose", "-v", action="count",
                           help="verbosity level")
    return argparser.parse_args()


def main(args):
    if not os.path.exists(args.outdir):
        os.makedirs(args.outdir)

    results, cython_files = make_cython_wrapper(
        args.header, args.sources, args.modulename, args.outdir, args.config,
        args.incdirs, args.verbose)
    write_files(results, args.outdir)
    cython(cython_files, args.outdir)


if __name__ == "__main__":
    main(parse_args())
